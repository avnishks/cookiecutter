repos:

    # Strip output out of jupyter notebooks (saves space and removes private information)
- repo: https://github.com/kynan/nbstripout
  rev: 0.6.0
  hooks:
  - id: nbstripout

  # Some general good practice and tidy ups
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.3.0
  hooks:
  - id: check-yaml
  - id: end-of-file-fixer
  - id: trailing-whitespace
  - id: check-added-large-files
  - id: check-json
  - id: check-toml
  - id: check-merge-conflict
  - id: check-case-conflict
  - id: mixed-line-ending
    args: ['--fix=lf']
  - id: debug-statements

  # Automatically fix styling in line with pep8 requirements
- repo: https://github.com/psf/black
  rev: 22.6.0
  hooks:
  - id: black

  # Sort imports according to pep8 requirements
- repo: https://github.com/PyCQA/isort
  rev: 5.12.0
  hooks:
  - id: isort

  # Detect many types of logical errors and check for any remaining PEP8
  # style errors (requiring by QMS)
- repo: https://github.com/PyCQA/flake8
  rev: 4.0.1
  hooks:
  - id: flake8
      # Dlint and bandit augment flake8 to check for security vulnerabilities
      # in the code itself. flake8-docstrings enforces docstrings in the numpy
      # format (as specified in setup.cfg)
    additional_dependencies: [dlint, flake8-docstrings, flake8-bandit]
{% if cookiecutter.enable_type_checking == 'y' %}
  # Mypy for type checking
- repo: local
  hooks:
  - id: mypy
    name: mypy
    language: system
    entry: "mypy"
    types: [python]
    require_serial: true
    exclude: "tests/*"
{% endif %}

- repo: https://github.com/python-poetry/poetry
  rev: '1.4'
  hooks:
    - id: poetry-check
    - id: poetry-lock
      args: ["--no-update"]
